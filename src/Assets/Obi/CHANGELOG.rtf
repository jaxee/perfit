{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23860\viewh14360\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
# Change Log\
All notable changes to \'93Obi - Advanced cloth for Unity\'94 will be documented in this file.\
\
## [3.2]\
\
### Added\
- Support for CapsuleCollider2D.\
\
### Changed\
- Colliders/rigidbodies are no longer copied over to the C++ library each frame. Instead, only colliders that have their transform or any collision-related property altered are copied to the solver. This greatly improves performance when many colliders are present, and greatly reduces memory allocation and GC activity.\
- AllocateParticles() and FreeParticles() have been merged with AddActor() and RemoveActor() respectively. A new per-particle array \'93particleToActor\'94 makes it faster and easier to know which actor a particle belongs to.\
\
### Removed\
- ObiCollisionGroup has disappeared. It is no longer necessary to manually add colliders to a group, instead each ObiSolver automatically picks up all ObiColliders in a given layer.\
- MeshColliders are now always treated as two-sided thin concave meshes. Solid and one-sided modes have disappeared.\
\
### Fixed\
- Bug in skin constraint normal calculation that caused particle jittering with some bind pose matrices.\
- Android issue that prevented some devices from finding the Oni library.\
- Removed redundant menu items.\
\
## [3.1.1]\
### Changed\
- Installation is no longer required. Obi now works right out of the box, so the installation window has been removed, and the \'93Editor default resources\'94 and \'93Gizmos\'94 folders removed.\
- Particle renderer is now much faster and also allocates less memory.\
\
## [3.1]\
### Added\
- You can now choose where should the solver be updated: FixedUpdate, AfterFixedUpdate, or LateUpdate.\
- Handles now work with skinned meshes too.\
- Volume constraints now work with skinned meshes too.\
- Support for triggers. A trigger collider will generate contact constraints, but won\'b4t enforce them.\
- Contact structs returned by the OnCollision event now include the contact tangent and bitangent vector.\
- Added per-particle layer properties, for finer collision control.\
\
### Changed\
- Faster and more accurate rigidbody impulse application, which results in better collision resolution.\
- Greatly improved pin constraint stability for large mass ratios.\
- ObiColliderGroup\'92s Colliders and Colliders2D properties are now plain arrays: \'93colliders\'94 and \'93colliders2D\'94.\
- Pin constraints are now always drawn in particle edit mode, not only when the particles are selected.\
- ObiParticleRenderer memory allocation has been greatly reduced, and its performance improved.\
\
### Fixed\
- ObiClothPicker now works correctly when the solver is set to simulate in local space.\
- Issue that caused particles with zero skin constraint radius to lag slightly behind the skinned mesh.\
- Bug that caused improper starting particle positions for skinned cloth.\
- Crash when using meshes with no tangents, but \'93Import tangents\'94 enabled in the import settings.\
- Bug that caused TriangleSkinMap editor to close immediately upon entering, if more than one inspector window was present.\
- Mesh normals and tangents weren\'92t properly reset when rewinding simulation in the particle editor.\
\
## [3.0.5]\
### Fixed\
- Memory alignment bug that could cause a crash when using skinned cloth.\
- Potential bug in GCHandle deallocation affecting upcoming Unity versions (thanks to the guys at Unity for pointing me at this)\
- Got rid of warnings related to obsolete platform enums in sample scripts.\
\
## [3.0.4]\
### Added\
- Support for iOS simulator.\
- ObiClothPicker (and ObiClothDragger) now also work with skinned cloth meshes.\
- Faster collision contact generation.\
\
### Fixed\
- Fixed tearable cloth creation from GameObject menu, as it created regular cloth instead.\
- Fixed memory alignment issue that could potentially cause a crash in 32 bit standalone projects.\
\
## [3.0.3]\
\
### Fixed\
- Bug that caused particle property value field to reset to the value of the last particle when painting.\
- Issue that caused Animator to be updated twice per frame in Unity 5.6\
- Adapted ObiClothPicker to Unity 5.6 raycast behavior (inactive colliders can no longer be raycasted individually).\
- Fixed collision stabilization bug that caused particles to sink slightly when over a dynamic rigidbody.\
\
## [3.0.2]\
\
### Added\
- ObiStitcher component allows to stitch together different pieces of cloth.\
- RuntimeCloth sample scene and scripts, that show you how to generate cloth from procedural meshes at runtime.\
- Tether constraints now properly support disjoint meshes (meshes made up of more than 1 separate piece).\
\
### Changed\
- Performance improvement in mesh colliders and edge colliders.\
\
### Fixed\
- Bug that caused ObiParticleRenderer to ignore camera culling mask, and render in all cameras.\
- Memory misalignment in Windows, that caused a crash in some skinned meshes.\
\
## [3.0.1]\
\
### Added\
- ObiClothProxy now supports SkinnedMeshRenderers as a target.\
\
### Changed\
- Increased default particle mass to 0.1kg instead of 0.05kg\
- Better skin constraint information visualization.\
\
### Fixed\
- Bug in hierarchical grid update that caused a crash in some cases when a hash key collision happened.\
- Bug in continuous collision detection that caused particles to be pushed to the other side of very thin objects.\
- Bug in ray/bounding box intersection test caused by non-IEEE754 compliant SSE division by zero.\
- Bug that caused a null exception in skin map assets.\
- Bug that caused spurious transformation of particles in particle editor, when using skinned renderer with non-identity mesh transform.\
\
## [3.0]\
\
#IMPORTANT: You\'92ll need to re-generate all your topologies and re-initialize ObiCloth components, as internal data layout of previous versions is not compatible with this update.\
\
### Added\
- Welcome window with automatic installer.\
- Upgraded constraint projection to XPBD (extended position-based dynamics). This decouples stiffness and damping from the amount of iterations, resulting in more realistic simulation.\
- Solver constraint enforcement order can now be changed. This allows to change the relative importance of constraints.\
- The solver now uses a task-based threading system which allows to exploit parallelism between multiple solvers.\
- Custom multithreading profiler, that allows to fine-tune performance.\
- Optional local-space simulation, for better numerical accuracy in large-scale worlds and greater control.\
- Support for painting per-vertex skin stiffness. \
- Support for painting per-vertex tear resistance.\
- Better data visualization for particle editor: particles now are drawn over a flat white version of the mesh, and paint mode shows the property gradient directly on top of the mesh (not only particles anymore).\
- Added pencil paint mode to particle editor.\
- Automatic self-collisions disabling for particles that intersect in rest pose. This allows to set larger particle radii \
  to ensure better self-collisions, without worrying about constraint fighting.\
- Proxy component now works with skinned meshes. It is also much faster now, all math-intensive methods have been moved to C++ and parallelized.\
- Breakable pin constraints.\
\
### Changed\
- Cloth component has been split in two different components: regular cloth and tearable cloth. This is because\
  regular cloth allows for extra optimizations to be made at initialization time. Also it prevents tether, skin and volume constraints\
  from being used with tearable cloth, since they are not compatible.\
- It is no longer necessary to set Animator\'92s update mode to update physics manually to avoid 1-frame delay, since animator update cycle is controlled by the cloth component.\
- Actor particle limit is no longer 16384 but 65536, matching Unity\'92s own vertex limit.\
- Particle editor paint brush falloff has ben changed from linear to gaussian.\
- Distance constraints\'92 compression stiffness has been replaced by a slack percentage.\
- Mesh updating is now done in c++, which results in better performance.\
- Aerodynamic constraints have been reverted to per-triangle, as this removes the need to supply per-particle normals from Unity\
  and allows the simulation to run as a closed loop in C++, which decreases memory transfers and increases performance.\
\
### Fixed\
- Bug in collision detection against terrains.\
- Crash in 32-bit windows systems due to memory misalignment.\
- Bug that caused slow convergence and excessive jittering for particle-particle sequential contact resolution.\
- Bug that caused out of bounds exception when trying to edit per-particle skin properties on non-skinned cloth.\
- Bug that prevented the particle editor window from appearing on retina displays.\
- Bug in aerodynamic lift force calculation, that caused way too much lift to be applied and resulted in instabilities.\
- Bug that prevented an already initialized cloth to be re-initialized with a different topology.\
- 1-frame delay between particle and rigid body physics, which affected pin and collision constraints.\
\
## [2.2.2]\
\
### Added\
- Support for Android deployment.\
\
### Fixed\
- Bug that caused SkinnedMeshRenderer component to be destroyed when exiting play mode while the cloth is selected.\
\
## [2.2.1]\
\
### Added\
- Support for 2D physics, Box2D, Circle2D and Edge2D colliders.\
- Sleep threshold that keeps particles fixed in place when their kinetic energy is low.\
- Required constraint components are automatically removed from the object when removing the rope component in editor.\
\
### Changed\
- Unity\'92s collider contactOffset and Obi\'92s contactOffset are now independent. Obi\'92s contactOffset has been renamed to \'93thickness\'94, and\
can be made negative to allow collider penetration.\
\
### Fixed\
- Issue with box colliders, that caused incorrect contact generation in corners when using contactOffset (now renamed \'93thickness\'94).\
- Issue with contact stabilization, which caused jittering and unexpected high velocities for contacts between high-mass particles \
and low-mass rigid bodies.\
\
## [2.2]\
\
### Added\
- MeshColliders are now fully supported.\
- New component: ObiParticleRenderer enables efficient rendering of particles using impostors, both in editor and build.\
- New component: ObiParticleHandle allows to parent particles and keep them fixed to any transform, without the need of pin constraints.\
\
### Fixed\
- Issue where fixing the rotation of a non-kinematic rigid body caused the inertia tensor to become NaN.\
- Issue where removing all particles from a solver after initializing it caused the solver bounds to become NaN.\
- Fixed memory alignment issue in Windows 32 bit builds, that caused random crashes.\
\
## [2.1]\
\
### Changed\
- Damping parameter is now much more stable and has a physical meaning: percentage of velocity lost per second.\
- New hierarchical spatial partitioning structure, which greatly improves collision performance and allows for wildly different particle sizes.\
- Memory management overhaul. Memory is now allocated/freed in the C++ plugin, which removes the need for manual memory pining which is not fully supported in some platforms.\
\
### Added\
- Enabled Eigen vectorization support. SIMD instructions are used where possible to speed up calculations.\
\
### Removed\
- Solver parameter \'93Interaction radius\'94, since it no longer had any use. The new spatial partitioning system automatically\
manages particles of different sizes.\
\
### Fixed\
- Circumvented a bug in IL2CPP that caused iOS projects to crash on startup.\
- Fixed a bug in multithreading which negatively affected performance in some cases when using parallel constraints.\
- Deactivated colliders no longer are considered for collisions.\
- Fixed a bug which caused windows 64 bit editor/builds to hang.\
\
## [2.0.2]\
\
### Added\
- Particle baker component, that allows to bake simulations in cache assets.\
- It is now possible to get per-particle collision information arrays from the solver, which allows to execute\
  custom code in response to collisions.\
\
### Changed\
- Mesh normal recalculation and particle orientation update have been moved to C++, increasing performance of mesh update almost x4.\
  Old projects need to re-generate topology assets and reinitialize existing cloth components.\
- Aerodynamic constraints are now applied per-particle instead of per-triangle. This allows for full\
  parallelism and decreases the amount of constraints, which increases performance.\
\
### Fixed\
- General stability improvements.\
- Bug that caused instabilities with low particle masses.\
- Bug that caused skinned cloth to lag 1 frame behind the character when using Mecanim.\
\
## [2.0.1]\
\
### Added\
- Cloth proxy system that allows arbitrary geometry to follow the simulation of a simpler mesh. For now it\
  only works with regular MeshRenderers, no SkinnedMeshRenderer support.\
- Support for CharacterController colliders.\
\
### Fixed\
- Bug that caused Unity to hang in Windows computers when adding a non-supported collider type to a collider group.\
- Bug that caused Unity to hang in Windows computers when using multithreading.\
- Bug that caused extreme particle speeds to hang Unity when collision constraints were active.\
- Bug that caused volume constraints to not initialize properly in some cases.\
\
## [2.0]\
### Added\
- Full multithreading. Obi will now automatically take advantage of all available cores in your cpu.\
- Support for cloth intercollisions. Cloth objects can now collide with each other.\
- Cloth objects can be deactivated, moved around and reactivated, and the simulation will not be affected by any movement that\
  took place while deactivated. This is useful for teleporting objects around.\
- Proper support for normal mapped cloth, trough optional tangent space update.\
- Collision materials are now used to control friction and stickiness.\
- Particle properties such as mass or skin radius can now be loaded from a texture.\
- New per-particle editable property: collision radius.\
\
### Changed\
- Complete architectural overhaul. This makes 2.0 backwards incompatible with previous versions.\
- Reimplemented the core solver in C++, resulting in substantial performance increase.\
\
### Removed\
- ObiWorld component is now obsolete. A new and more efficient collision system based on collision groups has replaced it.\
- Distance field colliders. Will be re-added in a future release, as they are being implemented in C++ for efficiency.\
- Shape matching constraints. Will be moved to a different Asset Store asset in the future, that focuses on soft and rigid bodies.\
\
### Fixed\
- Bug in aerodynamics lift force calculation.\
- Bug when using multiple colliders attached to the same rigid body, that caused incorrect forces to be applied.\
\
## [1.7][unreleased]\
### Added\
- Overall performance optimizations.\
- SORFactor is now available for SEQUENTIAL solver mode too.\
- Tether constraints added. They allow to dramatically reduce cloth stretching with high density meshes while keeping\
  stretch constraint iteration count low.\
- Adhesion force added to collisions, which allow the cloth to \'93stick\'94 to objects.\
- Per-cloth multithreading. You can select how many threads you want to run the simulation. Note that\
threads are not shared across GameObjects, so if you use multithreading with several cloth objects you might end\
up with too many threads which will hurt performance instead.\
\
### Changed\
- Memory allocation reduced for collisions and self-collisions.\
- Vast performance improvement in nearest neighbor search, which accelerates self collisions by a factor of 4.\
- Moved step simulation back to FixedUpdate (was changed to Update in 1.6.1 to accommodate interpolation) due to jittering issues \
 with physics.\
\
### Fixed\
- Bug in interpolation fixed, which caused a null exception to be thrown when creating large cloth objects.\
\
## [1.6.1] - 2015-09-8\
### Added\
- Interpolation modes. Now cloth simulation state can be interpolated between frames, which allows for\
smoother simulation (specially with low Time Scale values, for bullet-time effects and such). No interpolation\
(the classic update mode) is still available and should be always used unless there\'92s a good reason not to, since\
it is cheaper.\
\
### Fixed\
- Bug in pin constraints that resulted in an OutOfRange exception in the editor.\
\
## [1.6] - 2015-17-9\
### Added\
- Brough back contact offset for cloth. Now the maximum between the cloth contact offset and \
  the collider\'92s contact offset is used when detecting collisions.\
- Distance field colliders now support open meshes, trough the \'93signed\'94 checkbox in distance field assets.\
- New brush selection and brush paint tools in the editor.\
- In the editor, now you can choose to see backfacing particles or not.\
\
### Changed\
- Slightly changed the kay skin constraints work: now radius constraint is applied after backstop constraint.\
\
### Fixed\
- Bug in distance field collider contact offset calculation.\
\
## [1.5] - 2015-09-8\
### Added\
- Speculative contacts. Now all the collision detection pipeline (including self-collisions) is continuous by default,\
  rendering ccd options obsolete. Friction is also resolved at constraint projection, and uses Coulomb\'92s model. This also\
  makes unnecesary to adjust velocities independently from positions.\
- ObiWorld component makes it possible to efficiently consider lots of colliders.\
- Shape matching constraints. Currently they only support rigid and linear deformation modes.\
- Stretch constraints now have independent stiffness for stretch and compression.\
- Support for SkinnedMeshRenderer, and a new kind of constraint: Skin Constraint.\
\
### Changed\
- Contact offset is no longer a global property of the cloth object. Each collider\'92s \'93contactOffset\'94 is used instead.\
\
### Fixed\
- Bug in aerodynamics lift force calculation.\
- Bug in pin constraints impulse calculation.\
- Bug that prevented compiling standalone versions.\
\
## [1.3.1] - 2015-08-8\
### Fixed\
- Bug in editor preview playback, due to timestep not being fixed nor clamped.\
\
## [1.3.0] - 2015-08-7\
### Added\
- Velocity damping.\
- Particle sleeping, which helps performance in mostly static cloth.\
- Cloth objects can be optionally optimized, which removes all fixed particles that are only linked to other fixed particles from the physical representation of the cloth.\
- Marquee particle selection mode in the editor: hold \'93control\'94 while dragging to select a group of particles.\
\
### Changed\
- Greatly improved performance of editor drawing. \
- Improved performance of both cloth generation and distance field generation.\
- More realistic aerodynamic model, taking into account cloth velocity and modeling both lift and drag.\
\
### Fixed\
- Bug in world velocity scale in which rotation velocities were wrong. \
\
## [1.2.0] - 2015-07-31\
### Added\
- Distance colliders.\
- Terrain collider support.\
\
### Fixed\
- Non-manifold meshes no longer throw an exception. HalfEdge.cs politely informs of the situation instead.\
\
### Changed\
- By default the self-collision constraint group is disabled.\
\
\
## [1.1.0] - 2015-07-15\
### Added\
- Constraint groups, with independent solver iteration controls for each constraint group, and\
two kinds of evaluation order.\
\
### Changed\
- ObiCloth inspector controls are now quite different from those of the initial version.\
- Self collision is now faster, implemented using particle-particle interactions only.\
\
### Removed\
- Triangle-particle self-collisions.\
\
### Fixed\
- Pressure constraint stability problems gone.\
\
\
## [1.0.0] - 2015-07-16\
- Initial release.\
}